// Visualize sincos
				for (int i = 0; i < 128; ++i) {
					f64 radius = 90.0;
					u32 offset = 200;

					tl::VectorI2 sc;

					/*
					sc = tl::sincos_fixed(i << 16);
					target.image.unsafe_pixel32(200 + i32(sc.x * radius / 65536.0), 200 + i32(sc.y * radius / 65536.0)) = 0xffffffff;
					*/

					sc = tl::sincos_fixed2(i << 16);
					target.image.unsafe_pixel32(200 + i32(sc.x * radius / 65536.0), 200 + i32(sc.y * radius / 65536.0)) = 0xffff7f7f;

					auto sc2 = tl::sincos(i * (tl::pi2 / 128.0));
					target.image.unsafe_pixel32(200 + i32(sc2.x * radius), 200 + i32(sc2.y * radius)) = 0xff7f7fff;
				}


#if SDF
		sdf_program.use();

		buf.quads();
		buf.tex_rect(0.f, 0.f, 512.0, 512.0, 0.f, 0.f, 1.f, 1.f, sdf.id);
		//buf.tex_rect(0.f, 0.f, 512.0, 512.0, 0.f, 0.f, 32.0f, 32.0f, sdf.id);
			
		buf.clear();
#endif